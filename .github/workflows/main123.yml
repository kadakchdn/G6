name: Build and Run Tests on Push
 
on:  
  push:  
    branches:  
      - "**"  # Runs on any branch push
 
jobs:
  build-and-run-tests:
    runs-on: ubuntu-latest  # Change to windows-latest or macos-latest if needed
 
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4  

      - name: Set up Java
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'  
          java-version: '17'  # Adjust based on your project

      - name: Check Installed Browser Drivers
        run: |
                   which chromedriver || echo "❌ ChromeDriver not found!"
                     which geckodriver || echo "❌ GeckoDriver not found!"

      
      - name: Build Project (Maven)
        run: mvn clean package -DskipTests=true  # If using Maven

      - name: Run App & Wait for Selenium Server JAR
        run: |
              cd target

              echo "🚀 Running Suite JAR..."
              nohup java -jar rajeshthevampire-1.0.0-jar-with-dependencies.jar > app.log 2>&1 &

              echo "⏳ Waiting for selenium-server jar to appear..."
              for i in {1..20}; do
               if ls selenium-server-*.jar 1> /dev/null 2>&1; then
              echo "✅ Selenium server jar found!"
              break
              else
              echo "Waiting... ($i/20)"
              sleep 3
              fi
              done

              echo "🔍 Listing directory contents:"
              ls -lh


      # Debugging Step: List files in target directory
      - name: List Target Directory
        run: ls -lah target  # This will show if the JAR file exists

      - name: Wait & List Files After App Starts
        run: |
            sleep 15
            echo "✅ Listing files AFTER app execution..."
            find . -type f


      # ✅ Start Selenium Server in Headless Mode
      - name: Start Selenium Server
        run: |
          nohup java -jar selenium-server-4.10.0.jar standalone --headless > selenium.log 2>&1 &
          sleep 30  # Wait for server to start

      # log selenium server
      - name: Check Selenium Server Log
        run: cat selenium.log

      # Check port
      - name: Is port 4444 bound?
        run: lsof -i :4444 || echo "❌ Nothing is running on 4444"

      # ✅ Verify Selenium Server is Running
      - name: Check Selenium Grid Status
        run: curl -I http://localhost:4444 || echo "❌ Selenium Grid is NOT running!"

      - name: Check if Selenium Server is Running
        run: curl -s http://localhost:4444/status || echo "❌ Selenium is NOT running!"

      

      - name: Find Report File
        run: |
          REPORT_FILE=$(find target -type f -name "index.html" | sort -r | head -1 || true)
          if [ -z "$REPORT_FILE" ]; then
            echo "❌ No report file found!"
            exit 1
          fi
          echo "Latest report file: $REPORT_FILE"
          echo "REPORT_FILE=$REPORT_FILE" >> $GITHUB_ENV

      - name: Upload HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: Test-Report
          path: ${{ env.REPORT_FILE }}  # Ensure only the file is uploaded
